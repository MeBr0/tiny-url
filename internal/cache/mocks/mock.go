// Code generated by MockGen. DO NOT EDIT.
// Source: cache.go

// Package mock_cache is a generated GoMock package.
package mock_cache

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/mebr0/tiny-url/internal/domain"
)

// MockURLs is a mock of URLs interface.
type MockURLs struct {
	ctrl     *gomock.Controller
	recorder *MockURLsMockRecorder
}

// MockURLsMockRecorder is the mock recorder for MockURLs.
type MockURLsMockRecorder struct {
	mock *MockURLs
}

// NewMockURLs creates a new mock instance.
func NewMockURLs(ctrl *gomock.Controller) *MockURLs {
	mock := &MockURLs{ctrl: ctrl}
	mock.recorder = &MockURLsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLs) EXPECT() *MockURLsMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockURLs) Delete(ctx context.Context, alias string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, alias)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockURLsMockRecorder) Delete(ctx, alias interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockURLs)(nil).Delete), ctx, alias)
}

// Get mocks base method.
func (m *MockURLs) Get(ctx context.Context, alias string) (domain.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, alias)
	ret0, _ := ret[0].(domain.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockURLsMockRecorder) Get(ctx, alias interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockURLs)(nil).Get), ctx, alias)
}

// Set mocks base method.
func (m *MockURLs) Set(ctx context.Context, url domain.URL) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", ctx, url)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockURLsMockRecorder) Set(ctx, url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockURLs)(nil).Set), ctx, url)
}
